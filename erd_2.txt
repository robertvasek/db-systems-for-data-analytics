
--------------------------------------------------------------------------------

# Task C: Dimensional Model Description

## Fact tables

Na základě vstupního relačního schématu (staging) jsme identifikovali dva hlavní obchodní procesy reprezentované dvěma tabulkami faktů, které mají atomickou granularitu: **fact_health** a **fact_tracking**.

---

### fact_tracking

*   **type:** Transaction (Event) Fact [5].
*   **grain:** Jeden záznam (řádek) odpovídá **jedné události GPS sledování** (`tracking event`) pro dané vozidlo, řidiče a přesný časový okamžik. Tato úroveň atomicity poskytuje maximální analytickou flexibilitu [4, 7].
*   **measures:**
    *   `distance` (numeric) – **Aditivní** (Fully Additive) [6].
    *   `driving_time` (numeric) – **Aditivní** (Fully Additive) [6].
    *   `speed` (numeric) – **Neaditivní** (Non-Additive) [6]. Tato míra (rychlost v km/h) by měla být agregována pomocí funkcí jako AVG nebo MAX, nikoli SUM, protože se jedná o poměrovou hodnotu.

Tato tabulka zaznamenává veškeré události pohybu a stavu vozidla.

---

### fact_health

*   **type:** Event/Periodic Snapshot Fact [5]. Ačkoliv se jedná o události (`pings`), jejich periodický charakter (každých cca 30 minut) [8] a zaznamenávání stavu (úroveň baterie, čas běhu) se blíží Periodic Snapshot, ale stále je modelujeme s atomickou granularitou události.
*   **grain:** Jeden záznam odpovídá **jedné události stavu aplikace/zařízení** (`health ping`) pro dané vozidlo, řidiče a přesný časový okamžik [9].
*   **primary key:** `service_key` (Degenerovaná dimenze sloužící jako unikátní obchodní identifikátor) [10].
*   **measures:**
    *   `battery_level` (numeric) – **Neaditivní** (Non-Additive) [6, 11]. Úroveň nabití baterie je statická míra (stav), kterou lze agregovat pouze pomocí průměru (AVG) nebo maxima/minima, nikoli součtem [11, 12].
    *   `app_run_time` (numeric) – **Semi-aditivní** (Semi-Additive) [6, 13]. Lze sčítat přes většinu dimenzí (např. přes všechny řidiče), ale nemělo by se sčítat přes dimenzi času.
    *   `dev_run_time` (numeric) – **Semi-aditivní** (Semi-Additive) [6, 13]. Lze sčítat přes většinu dimenzí, ale nemělo by se sčítat přes dimenzi času.

Tato tabulka zachycuje metriky výkonu a spolehlivosti zařízení a aplikace.

---

## Dimensions

Všechny dimenze využívají **Surrogate Keys (SK)** jako primární klíče, což zajišťuje nezávislost datového skladu na změnách v operačních systémech [14].

*   **Date_Dim** – Statická kalendářní dimenze [15, 16]. Obsahuje deskriptivní atributy data (`year`, `month`, `day`, `is_weekend`) pro jednoduchou časovou analýzu. Je sdílena mezi oběma faktovými tabulkami (`fact_health`, `fact_tracking`).
*   **Time_Dim** – Dimenze času dne (Time-of-day), oddělená od data pro udržení malých dimenzí [17]. Obsahuje atributy jako `hour`, `minute`, a `second`. Je sdílena.
*   **Car_Dim** – Denormalizovaná dimenze vozidla. Obsahuje všechny atributy o voze (`license_plate`, `make`, `color`, `tonnage`) [18] a navíc **denormalizované atributy společnosti** (`company_name`, `company_city`, `company_country`, `company_region_code`) [3, 19]. Tato denormalizace předchází Snowflake schématu [20].
*   **Driver_Dim** – Denormalizovaná dimenze řidiče. Obsahuje detaily o řidiči (`driver_id`, `driver_name`) [21]. Je denormalizována s atributy společnosti (`company_name`, `company_city`, `company_country`, `company_region_code`) [3, 19], aby se zajistila konzistentnost (konformita) s `Car_Dim`. Tato dimenze by měla být schopna zpracovávat změny (např. změnu jména řidiče nebo zařazení pod jinou společnost) pomocí **SCD Type 2** (Versioning of Rows) [22, 23].
*   **Device_Dim** – Metada k zařízení (`device_name`).
*   **TruckStatus_Dim** – Dekóduje stavové kódy vozidla (`M`, `_`, `=`, `*`, `#`, `X`, `F`) [24] do čitelné formy (`status_code`, `status_label`).

*(Poznámka: Dimenze `Company_Dim` a `Operator_Dim` nejsou v aktuálním ERD [3] jako samostatné tabulky připojeny k faktům. Informace o společnosti jsou denormalizovány do Car_Dim a Driver_Dim.)*

---

### Degenerate Dimensions

Degenerované dimenze (DD) jsou operační řídicí čísla uložená přímo v tabulce faktů, které nemají odpovídající dimenzní tabulku [10, 25].

*   `pos_key` (pro `fact_tracking`) – slouží jako primární klíč a obchodní identifikátor události [10, 26].
*   `service_key` (pro `fact_health`) – slouží jako primární klíč a obchodní identifikátor události [9, 10].
*   `pos_gps` (v obou faktových tabulkách) – GPS souřadnice latitude a longitude uložené jako kontextová informace, nikoli jako míra nebo tradiční dimenze [24, 26, 27].

---

### Shared (Conformed) Dimensions

Sdílené dimenze zajišťují konzistentní reportování napříč různými obchodními procesy [28, 29].

*   `Date_Dim`
*   `Time_Dim`
*   `Car_Dim`
*   `Driver_Dim`

---

### Dimension Relationships (FKs)

**fact_tracking** je propojena s dimenzemi:

*   `Date_Dim` (via `date_key`)
*   `Time_Dim` (via `time_key`)
*   `Car_Dim` (via `car_key`)
*   `Driver_Dim` (via `driver_key`)
*   `TruckStatus_Dim` (via `truck_status_key`)

**fact_health** je propojena s dimenzemi:

*   `Date_Dim` (via `date_key`)
*   `Time_Dim` (via `time_key`)
*   `Car_Dim` (via `car_key`)
*   `Driver_Dim` (via `driver_key`)
*   `Device_Dim` (via `device_key`)

